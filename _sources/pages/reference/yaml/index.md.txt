# YAML

See the documentation of the built-in YAML here:

- <a href="https://ait-energy.github.io/IESopt.jl/dev/pages/manual___reference/core_components/#IESopt.Connection" target="_blank">Connection</a>: A `Connection` is used to model arbitrary flows of energy between Nodes. It allows for limits, costs, delays, ...
- <a href="https://ait-energy.github.io/IESopt.jl/dev/pages/manual___reference/core_components/#IESopt.Decision" target="_blank">Decision</a>: A `Decision` represents a basic decision variable in the model that can be used as input for various other core component's settings, as well as have associated costs.
- <a href="https://ait-energy.github.io/IESopt.jl/dev/pages/manual___reference/core_components/#IESopt.Node" target="_blank">Node</a>: A `Node` represents a basic intersection/hub for energy flows. This can for example be some sort of bus (for electrical systems). It enforces a nodal balance equation (= "energy that flows into it must flow out") for every Snapshot. Enabling the internal state of the `Node` allows it to act as energy storage, modifying the nodal balance equation. This allows using `Node`s for various storage tasks (like batteries, hydro reservoirs, heat storages, ...). 
- <a href="https://ait-energy.github.io/IESopt.jl/dev/pages/manual___reference/core_components/#IESopt.Profile" target="_blank">Profile</a>: A `Profile` allows representing "model boundaries" - parts of initial problem that are not endogenously modelled - with a support for time series data. Examples are hydro reservoir inflows, electricity demand, importing gas, and so on. Besides modelling fixed profiles, they also allow different ways to modify the value endogenously.
- <a href="https://ait-energy.github.io/IESopt.jl/dev/pages/manual___reference/core_components/#IESopt.Unit" target="_blank">Unit</a>: A `Unit` allows transforming one (or many) forms of energy into another one (or many), given some constraints and costs.
